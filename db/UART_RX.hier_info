|UART_RX
clock => clock.IN1
reset => reset.IN1
rx => syncff0.DATAIN
srclk <= led_driver_4digit_595:led_display.srclk
rclk <= led_driver_4digit_595:led_display.rclk
ser <= led_driver_4digit_595:led_display.ser


|UART_RX|led_driver_4digit_595:led_display
clk => shift_data[0].CLK
clk => shift_data[1].CLK
clk => shift_data[2].CLK
clk => shift_data[3].CLK
clk => shift_data[4].CLK
clk => shift_data[5].CLK
clk => shift_data[6].CLK
clk => shift_data[7].CLK
clk => shift_data[8].CLK
clk => shift_data[9].CLK
clk => shift_data[10].CLK
clk => shift_data[11].CLK
clk => shift_data[12].CLK
clk => shift_data[13].CLK
clk => shift_data[14].CLK
clk => shift_data[15].CLK
clk => seg_code[0].CLK
clk => seg_code[1].CLK
clk => seg_code[2].CLK
clk => seg_code[3].CLK
clk => seg_code[4].CLK
clk => seg_code[5].CLK
clk => seg_code[6].CLK
clk => seg_code[7].CLK
clk => digit_sel[0].CLK
clk => digit_sel[1].CLK
clk => digit_sel[2].CLK
clk => digit_sel[3].CLK
clk => digit_sel[4].CLK
clk => digit_sel[5].CLK
clk => digit_sel[6].CLK
clk => digit_sel[7].CLK
clk => digit_val[0].CLK
clk => digit_val[1].CLK
clk => digit_val[2].CLK
clk => digit_val[3].CLK
clk => digit_index[0].CLK
clk => digit_index[1].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => bit_cnt[4].CLK
clk => ser~reg0.CLK
clk => rclk~reg0.CLK
clk => srclk~reg0.CLK
clk => digits[0][0].CLK
clk => digits[0][1].CLK
clk => digits[0][2].CLK
clk => digits[0][3].CLK
clk => digits[1][0].CLK
clk => digits[1][1].CLK
clk => digits[1][2].CLK
clk => digits[1][3].CLK
clk => digits[2][0].CLK
clk => digits[2][1].CLK
clk => digits[2][2].CLK
clk => digits[2][3].CLK
clk => digits[3][0].CLK
clk => digits[3][1].CLK
clk => digits[3][2].CLK
clk => digits[3][3].CLK
clk => buffer[0][0].CLK
clk => buffer[0][1].CLK
clk => buffer[0][2].CLK
clk => buffer[0][3].CLK
clk => buffer[1][0].CLK
clk => buffer[1][1].CLK
clk => buffer[1][2].CLK
clk => buffer[1][3].CLK
clk => buffer[2][0].CLK
clk => buffer[2][1].CLK
clk => buffer[2][2].CLK
clk => buffer[2][3].CLK
clk => buffer[3][0].CLK
clk => buffer[3][1].CLK
clk => buffer[3][2].CLK
clk => buffer[3][3].CLK
clk => enter_received.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => state~1.DATAIN
reset => digit_index[0].ACLR
reset => digit_index[1].ACLR
reset => bit_cnt[0].ACLR
reset => bit_cnt[1].ACLR
reset => bit_cnt[2].ACLR
reset => bit_cnt[3].ACLR
reset => bit_cnt[4].ACLR
reset => ser~reg0.ACLR
reset => rclk~reg0.ACLR
reset => srclk~reg0.ACLR
reset => digits[0][0].ACLR
reset => digits[0][1].ACLR
reset => digits[0][2].ACLR
reset => digits[0][3].ACLR
reset => digits[1][0].ACLR
reset => digits[1][1].ACLR
reset => digits[1][2].ACLR
reset => digits[1][3].ACLR
reset => digits[2][0].ACLR
reset => digits[2][1].ACLR
reset => digits[2][2].ACLR
reset => digits[2][3].ACLR
reset => digits[3][0].ACLR
reset => digits[3][1].ACLR
reset => digits[3][2].ACLR
reset => digits[3][3].ACLR
reset => buffer[0][0].ACLR
reset => buffer[0][1].ACLR
reset => buffer[0][2].ACLR
reset => buffer[0][3].ACLR
reset => buffer[1][0].ACLR
reset => buffer[1][1].ACLR
reset => buffer[1][2].ACLR
reset => buffer[1][3].ACLR
reset => buffer[2][0].ACLR
reset => buffer[2][1].ACLR
reset => buffer[2][2].ACLR
reset => buffer[2][3].ACLR
reset => buffer[3][0].ACLR
reset => buffer[3][1].ACLR
reset => buffer[3][2].ACLR
reset => buffer[3][3].ACLR
reset => enter_received.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => state~3.DATAIN
reset => shift_data[0].ENA
reset => digit_val[3].ENA
reset => digit_val[2].ENA
reset => digit_val[1].ENA
reset => digit_val[0].ENA
reset => digit_sel[7].ENA
reset => digit_sel[6].ENA
reset => digit_sel[5].ENA
reset => digit_sel[4].ENA
reset => digit_sel[3].ENA
reset => digit_sel[2].ENA
reset => digit_sel[1].ENA
reset => digit_sel[0].ENA
reset => seg_code[7].ENA
reset => seg_code[6].ENA
reset => seg_code[5].ENA
reset => seg_code[4].ENA
reset => seg_code[3].ENA
reset => seg_code[2].ENA
reset => seg_code[1].ENA
reset => seg_code[0].ENA
reset => shift_data[15].ENA
reset => shift_data[14].ENA
reset => shift_data[13].ENA
reset => shift_data[12].ENA
reset => shift_data[11].ENA
reset => shift_data[10].ENA
reset => shift_data[9].ENA
reset => shift_data[8].ENA
reset => shift_data[7].ENA
reset => shift_data[6].ENA
reset => shift_data[5].ENA
reset => shift_data[4].ENA
reset => shift_data[3].ENA
reset => shift_data[2].ENA
reset => shift_data[1].ENA
value[0] => LessThan0.IN16
value[0] => LessThan1.IN16
value[0] => buffer.DATAB
value[0] => buffer.DATAB
value[0] => buffer.DATAB
value[0] => buffer.DATAB
value[0] => Equal0.IN2
value[1] => LessThan0.IN15
value[1] => LessThan1.IN15
value[1] => buffer.DATAB
value[1] => buffer.DATAB
value[1] => buffer.DATAB
value[1] => buffer.DATAB
value[1] => Equal0.IN7
value[2] => LessThan0.IN14
value[2] => LessThan1.IN14
value[2] => buffer.DATAB
value[2] => buffer.DATAB
value[2] => buffer.DATAB
value[2] => buffer.DATAB
value[2] => Equal0.IN1
value[3] => LessThan0.IN13
value[3] => LessThan1.IN13
value[3] => buffer.DATAB
value[3] => buffer.DATAB
value[3] => buffer.DATAB
value[3] => buffer.DATAB
value[3] => Equal0.IN0
value[4] => LessThan0.IN12
value[4] => LessThan1.IN12
value[4] => Equal0.IN6
value[5] => LessThan0.IN11
value[5] => LessThan1.IN11
value[5] => Equal0.IN5
value[6] => LessThan0.IN10
value[6] => LessThan1.IN10
value[6] => Equal0.IN4
value[7] => LessThan0.IN9
value[7] => LessThan1.IN9
value[7] => Equal0.IN3
data_valid => enter_received.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => buffer.OUTPUTSELECT
data_valid => count.OUTPUTSELECT
data_valid => count.OUTPUTSELECT
srclk <= srclk~reg0.DB_MAX_OUTPUT_PORT_TYPE
rclk <= rclk~reg0.DB_MAX_OUTPUT_PORT_TYPE
ser <= ser~reg0.DB_MAX_OUTPUT_PORT_TYPE


